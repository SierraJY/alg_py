# 한 번의 선긋기는 수직선상의 한 점에서 다른 한 점까지 선을 긋는 것입니다.
# 선을 그을 때는 이미 선이 있는 위치에 겹쳐서 그을 수도 있습니다.
# 여러번 그은 곳과 한 번 그은 곳의 차이는 없습니다.
# 수직선은 0번 지점부터 m번 지점까지의 길이를 갖고 있습니다
# 매개변수 nums에 각각의 선긋기 정보가 주어지면 0번 지점부터 n번 지점까지 연속적인 선이
# 그어지도록 하기 위한 선긋기 최소횟수를 반환하는 프로그램을 작성하세요.
# 모든 입력은 0번 지점부터 m번지점까지 연속적인 선이 그어집니다

def solution(m, nums):

    nums.sort(key=lambda l : l[0])

    line_cnt = 0
    max_start = 0 # 다음 선의 시작점이 가질 수 있는 최대값

    while max_start < m:

        tmp_next_max_start = 0
        i = 0

        # while 조건문 순서 주의 -> 순서 바뀌면 아웃 오브 레인지
        while tmp_next_max_start < m and nums[i][0] <= max_start:
            tmp_next_max_start = max(tmp_next_max_start, nums[i][1])
            i += 1

        max_start = tmp_next_max_start
        line_cnt += 1

    return line_cnt


print(solution(12, [[5, 10], [1, 8], [0, 2], [0, 3], [2, 5], [2, 6], [10, 12], [7, 12]]))
print(solution(15, [[1, 10], [0, 8], [0, 7], [0, 10], [12, 5], [0, 12], [8, 15], [5, 14]]))
print(solution(20, [[3, 7], [5, 8], [15, 20], [0, 5], [7, 14], [3, 10], [0, 8], [13, 18], [5, 9]]))
print(solution(30, [[5, 7], [3, 9], [2, 7], [0, 1], [0, 2], [0, 3], [19, 30], [8, 15], [7, 12], [13, 20]]))
print(solution(25, [[10, 15], [15, 20], [5, 15], [3, 16], [0, 5], [0, 3], [12, 25]]))

# what
# 0번 지점 부터 m번 지점까지 연속적인 선이 그어지도록하기 위한 선긋기 최소횟수

# how
# 그리디
# 다음 선이 가질 수 있는 시작점을 만족하는 선들 중에서 가장 긴 것 부터 선택

# condition
# 겹쳐서 그을 수 있음
# nums[i][0] : 시작점
# nums[i][1] : 끝점
